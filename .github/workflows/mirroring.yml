name: Mirroring
on:
  push:
    branches-ignore:
      - main
  pull_request:
    types: [closed]
    branches:
      - main

env:
  MIRROR_URL:
    git@github.com:EpitechPromo2027/B-OOP-400-REN-4-1-arcade-arthur.doriel.git
  BINARIES:
    arcade

jobs:
  check_compilation:
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check compilation
        run: |
          make && make clean && make fclean && make re
      - name: Check binary
        run: |
          if [ ! -f ${{ env.BINARIES }} ]; then
            echo "Binary not found"
            exit 1
          fi

      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.BINARIES }}
          path: ${{ env.BINARIES }}

  crate_release:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    needs: check_compilation
    container: epitechcontent/epitest-docker:latest
    steps:
      - uses: actions/checkout@v3

      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.BINARIES }}

      - name: Install GitHub CLI
        run: |
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
          sudo apt-add-repository https://cli.github.com/packages
          sudo apt update
          sudo apt install gh

      - name: Release pushed tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: V0.0.0
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${GITHUB_REPOSITORY#*/} ${tag#v}" \
              --generate-notes
          
          gh release upload "$tag" ./${{ env.BINARIES }}



  push_to_mirror:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    needs: crate_release
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check branch
        run: |
          if [ "$(git rev-parse --abbrev-ref HEAD)" != "main" ]; then
            echo "Not on main branch, skipping..."
          else
            echo "On main branch, continuing..."
          fi
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.GIT_SSH_PRIVATE_KEY }}
